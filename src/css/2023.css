/* Colors */
:root {
  --c-accent: #b51f24;
  --c-bg: #ffffff;
  --c-subtle: #c7c7c7;
  --c-subtle-bg: #f9f9f9;
  --c-text: #111111;
  --f-base: "Rubik", sans-serif;
}

/* Fonts */
@font-face {
  font-family: "museo";
  src: url("/fonts/museosans-300-webfont.woff2") format("woff2");
}

@font-face {
  font-family: "chunkfive";
  src: url("/fonts/chunkfive-regular-webfont.woff2") format("woff2");
}

/*
  Made by Elly Loel - https://ellyloel.com/
  With inspiration from:
    - Josh W Comeau - https://courses.joshwcomeau.com/css-for-js/treasure-trove/010-global-styles/
    - Andy Bell - https://piccalil.li/blog/a-modern-css-reset/
    - Adam Argyle - https://unpkg.com/open-props@1.3.16/normalize.min.css / https://codepen.io/argyleink/pen/KKvRORE

  Notes:
    - `:where()` is used to lower specificity for easy overriding.
*/

* {
  /* Remove default margin on everything */
  margin: 0;
  /* Remove default padding on everything */
  padding: 0;
  /* Calc `em` based line height, bigger line height for smaller font size and smaller line height for bigger font size: https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/ */
  line-height: calc(0.25rem + 1em + 0.25rem);
}

/* Use a more-intuitive box-sizing model on everything */
*,
::before,
::after {
  box-sizing: border-box;
}

/* Remove border and set sensible defaults for backgrounds, on all elements except fieldset progress and meter */
*:where(:not(fieldset, progress, meter)) {
  border-width: 0;
  border-style: solid;
  background-origin: border-box;
  background-repeat: no-repeat;
}

html {
  /* Allow percentage-based heights in the application */
  block-size: 100%;
  /* Making sure text size is only controlled by font-size */
  -webkit-text-size-adjust: none;
}

/* Smooth scrolling for users that don't prefer reduced motion */
@media (prefers-reduced-motion: no-preference) {
  html:focus-within {
    scroll-behavior: smooth;
  }
}

body {
  /* Improve text rendering */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* https://marco.org/2012/11/15/text-rendering-optimize-legibility */
  text-rendering: optimizeSpeed;
  /* Allow percentage-based heights in the application */
  min-block-size: 100%;
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter#example_2 */
  /* scrollbar-gutter: stable both-edges; Removed until this bug is fixed: https://bugs.chromium.org/p/chromium/issues/detail?id=1318404#c2 */
  background-color: var(--c-bg);
  color: var(--c-text);
  font-family: var(--f-base);
  font-weight: 500;
  overflow-x: hidden;
}

/* Improve media defaults */
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}
:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}

/* Remove stroke and set fill colour to the inherited font colour */
:where(svg) {
  stroke: none;
  fill: currentColor;
}

/* SVG's without a fill attribute */
:where(svg):where(:not([fill])) {
  /* Remove fill and set stroke colour to the inherited font colour */
  stroke: currentColor;
  fill: none;
  /* Rounded stroke */
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* Set a size for SVG's without a width attribute */
:where(svg):where(:not([width])) {
  inline-size: 5rem;
}

/* Remove built-in form typography styles */
:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  color: inherit;
  font: inherit;
  font-size: inherit;
  letter-spacing: inherit;
}

/* Change textarea resize to vertical only and block only if the browser supports that */
:where(textarea) {
  resize: vertical;
}
@supports (resize: block) {
  :where(textarea) {
    resize: block;
  }
}

/* Avoid text overflows */
:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
:where(ul, ol)[role="list"] {
  list-style: none;
}

/* More readable underline style for anchor tags without a class. This could be set on anchor tags globally, but it can cause conflicts. */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make it clear that interactive elements are interactive */
:where(a[href], area, button, input, label[for], select, summary, textarea, [tabindex]:not([tabindex*="-"])) {
  cursor: pointer;
  touch-action: manipulation;
}
:where(input[type="file"]) {
  cursor: auto;
}
:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  cursor: pointer;
}

/* Animate focus outline */
@media (prefers-reduced-motion: no-preference) {
  :focus-visible {
    transition: outline-offset 145ms cubic-bezier(0.25, 0, 0.4, 1);
  }
  :where(:not(:active)):focus-visible {
    transition-duration: 0.25s;
  }
}
:where(:not(:active)):focus-visible {
  outline-offset: 5px;
}

/* Make sure users can't select button text */
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"]),
:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  user-select: none;
  text-align: center;
}

/* Disabled cursor for disabled buttons */
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"])[disabled] {
  cursor: not-allowed;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

h1,
h2,
h3,
h4,
h5 {
  color: var(--c-text);
  font-family: var(--f-base);
  font-weight: 800;
  line-height: 1.25;
}

a {
  color: var(--c-accent);
  font-weight: 800;
  text-decoration: none;
}

strong {
  font-weight: 800;
}

/* main {
  scroll-snap-type: y mandatory;
  height: 100dvh;
  overflow: auto;
} */

header {
  align-items: center;
  background-color: #a61d21;
  background-image: url("data:image/svg+xml,%3Csvg width='40' height='1' viewBox='0 0 40 1' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h20v1H0z' fill='%23b51f24' fill-opacity='1' fill-rule='evenodd'/%3E%3C/svg%3E");
  background-repeat: repeat;
  color: var(--c-bg);
  display: flex;
  flex-direction: column;
  height: 100dvh;
  justify-content: center;
  overflow-x: hidden;
  text-align: center;
  text-transform: uppercase;
}

header h1,
.stairs h2 {
  color: var(--c-bg);
  line-height: 1;
}

header h1,
header p {
  position: relative;
  z-index: 10;
}

header h1 {
  font-size: 18vw;
  text-shadow: 0 0.25rem 0.25rem var(--c-accent);
}

header h1 span {
  display: block;
  font-size: 16vw;
}

header p {
  font-weight: 400;
  font-family: var(--f-base);
  font-size: 9.5vw;
  text-shadow: 0 0.25rem 0.25rem var(--c-accent);
}

header img {
  box-shadow: 0 0 0 1rem var(--c-bg);
  position: absolute;
  max-width: 320px;
  width: 50vw;
}

header img:nth-of-type(1) {
  right: 0;
  transform: rotate(20deg);
  top: 0;
}

header img:nth-of-type(2) {
  bottom: 0;
  transform: rotate(-20deg);
  left: 0;
}

@media screen and (min-width: 1000px) {
  header h1 {
    font-size: 14vw;
  }

  header h1 span {
    font-size: 12vw;
  }

  header p {
    font-size: 6.5vw;
  }
}

@media screen and (min-width: 1800px) {
  header img:nth-of-type(1) {
    left: calc(50% + 400px);
    right: inherit;
    top: 0;
  }

  header img:nth-of-type(2) {
    bottom: 0;
    left: inherit;
    right: calc(50% + 400px);
  }
}

.stairs {
  background-color: #280f13;
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}

.stairs figure {
  grid-area: 1 / 1 / 2 / 2;
}

.stairs img {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.stairs div {
  background-color: rgba(0, 0, 0, 0.25);
  grid-area: 1 / 1 / 2 / 2;
}

.stairs h2 {
  font-size: 13vw;
  padding: 10vw 5vw 2vw 5vw;
}

.stairs p {
  color: var(--c-bg);
  padding: 0 5vw;
}

@media screen and (min-width: 1000px) {
  .stairs {
    grid-template-columns: repeat(2, 50%);
    grid-template-rows: 1fr;
  }

  .stairs figure {
    grid-area: 1 / 1 / 2 / 2;
  }

  .stairs div {
    grid-area: 1 / 2 / 2 / 3;
  }

  .stairs h2 {
    background: -webkit-linear-gradient(#fff2e8, #e68d5e);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: 6vw;
  }
}

.miss-you {
  background-color: #f5f5f5;
  background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23a3a3a3' fill-opacity='1'%3E%3Cpath d='M50 50c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c0 5.523-4.477 10-10 10s-10-4.477-10-10 4.477-10 10-10zM10 10c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c0 5.523-4.477 10-10 10S0 25.523 0 20s4.477-10 10-10zm10 8c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm40 40c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  background-repeat: repeat;
  display: flex;
  height: 100dvh;
  padding: 5vh;
}

.miss-you article {
  background: var(--c-bg);
  border: 0.5rem double var(--c-text);
  color: var(--c-bg);
  padding: 2vw;
  width: 100%;
}

.miss-you h2 {
  color: var(--c-text);
  font-size: 4vw;
}

.miss-you p {
  color: var(--c-text);
  font-size: 1.5vw;
  margin-block-start: 1vw;
}

@media screen and (min-width: 1000px) {
  .miss-you div {
    width: 50%;
  }

  .miss-you article {
    display: flex;
    gap: 5vw;
    justify-content: space-between;
  }

  .miss-you img {
    align-self: flex-end;
    width: 50%;
  }
}

#mc_embed_signup {
  max-inline-size: 640px;
  margin-inline: auto;
  width: 100% !important;
}

.section-signup {
  padding: 1rem;
}

#mc_embed_signup form {
  margin: 0 !important;
}

#mc_embed_signup .mc-field-group label,
#mc_embed_signup .mc-field-group input {
  font-family: var(--f-base) !important;
}

#mc_embed_signup .button {
  background-color: #1b5d19 !important;
  font-weight: 700 !important;
}

#mc_embed_signup .button:active,
#mc_embed_signup .button:focus,
#mc_embed_signup .button:hover {
  background-color: #237820 !important;
}
